name: Build
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  next-build:
    runs-on: ubuntu-latest
    container: node:lts # Use node LTS container version, same as Dockerfile base image
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # Checkout the code
      - run: yarn #install dependencies
      - run: yarn build
        env:
          "NEXT_PUBLIC_REST_API_ENDPOINT": ""
          "NEXT_PUBLIC_WEBSITE_URL": ""
          "NEXT_PUBLIC_ADMIN_URL": ""
          "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY": ""
          "NEXT_PUBLIC_PAYPAL_CLIENT_TOKEN": ""
          "NEXT_PUBLIC_AUTH_TOKEN_KEY": "AUTH_CRED"
          "APPLICATION_MODE": "production"
          "NEXT_PUBLIC_DEFAULT_LANGUAGE": "en"
          "NEXT_PUBLIC_ENABLE_MULTI_LANG": "false"
          "NEXT_PUBLIC_AVAILABLE_LANGUAGES": "en"
      - name: Upload Next build # Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            .next
            public
          retention-days: 7 # artifact retention duration, can be upto 30 days
  docker-push:
    needs: next-build # Job depends on next-build(above) job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download next build # Download the above uploaded artifact
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and Push Docker Images
        run: |
          export CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
          export TAG=$([[ $CURRENT_BRANCH == "main" ]] && echo "latest" || echo $CURRENT_BRANCH)
          export GCR_IMAGE=ghcr.io/$GITHUB_REPOSITORY:latest
          export GITHUB_REF_IMAGE=ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA
          export GITHUB_BRANCH_IMAGE=ghcr.io/$GITHUB_REPOSITORY:$TAG
          docker build -t $GCR_IMAGE -t $GITHUB_REF_IMAGE -t $GITHUB_BRANCH_IMAGE .
          echo "Pushing Image to GitHub Container Registry"
          docker push $GITHUB_REF_IMAGE
          docker push $GITHUB_BRANCH_IMAGE
